-- This is an example site configuration for Gluon v2015.1+
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as it. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'FF-BO-',

  -- Name of the community.
  site_name = 'Freifunk Bochum (FFBO)',

  -- Shorthand of the community.
  site_code = 'ffbo',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.226.0.0/16',
  prefix6 = '2a03:2260:50:10::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'10.53.16.1', 'ntp1.ptb.de'},

  -- Wireless regulatory domain of your community.
  regdom = 'US',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSID used for client network.
    ssid = 'Freifunk',

    -- Specifies the channel width in 802.11n and 802.11ac mode.
    -- Possible values are:
    -- HT20 (single 20MHz channel),
    -- HT40- (2x 20MHz channels, secondary below)
    -- HT40+ (2x 20MHz channels, secondary above)
    htmode = 'HT40+',

    -- Adjust these values!
    mesh_ssid = 'mesh.ffbo',  -- ESSID used for mesh
    mesh_bssid = '02:ff:13:37:10:01', -- BSSID used for mesh

    -- Bitrate used for multicast/broadcast packets.
    mesh_mcast_rate = 12000,

    -- (optional) mesh VLAN on 802.11 ad-hoc interface (1-4095)
    -- mesh_vlan = 14,
    -- client_disabled = true,
    -- mesh_disabled = false,
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {
    ssid = 'Freifunk (5GHz)',
    channel = 44,
    htmode = 'HT40+',
    mesh_ssid = 'mesh.ffbo.5',
    mesh_bssid = '02:ff:13:37:10:02',
    mesh_mcast_rate = 12000,
    -- mesh_vlan = 14,
    -- client_disabled = true,
    -- mesh_disabled = false,
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.226.254.254',
    ip6 = '2a03:2260:50:10::cafe',

    -- anycast MAC of all nodes
    mac = '16:41:95:40:f7:dc',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.

	fastd_mesh_vpn = {
		methods = {'salsa2012+umac'},
		enabled = true,
		mtu = 1364,
		
		groups = {
			backbone = {limit = 0, peers = {},},
					backbone_eins = {
						limit = 1,
						peers = {
							node011 = {	
								key = 'b99ecd9663126a8036d9e9990df7110318567b6cfa06652e55de853a6384fb6a',
								remotes = {
									'ipv4 "node01.bo.freifunk.ruhr" port 10000',
									'ipv6 "node01.bo.freifunk.ruhr" port 10000'
									},
							},
							node012 = {
								key = 'ced3cba70bee66c43d5ef200d7495b782998d642e63797b4fdf3ca9ed8bd56c7',
								remotes = {
									'ipv4 "node01.bo.freifunk.ruhr" port 11000',
									'ipv6 "node01.bo.freifunk.ruhr" port 11000'
									},							
							},
						},
					}, 

					backbone_zwei = {
						limit = 1,
						peers = {
							node021 = {	
								key = '15e1601791c201e463ca404ae9174f937859346ef1b7311a3e9eebf02fe6ebbe',
								remotes = {
									'ipv4 "node02.bo.freifunk.ruhr" port 10000',
									'ipv6 "node02.bo.freifunk.ruhr" port 10000'
									},
							},
							node022 = {
								key = '06bdb85b0714d0a98b4bd3992fc927397aea062c4734d1034f432f780d1fc012',
								remotes = {
									'ipv4 "node02.bo.freifunk.ruhr" port 11000',
									'ipv6 "node02.bo.freifunk.ruhr" port 11000'
									},							
							},
						},
					},


		},
	
},	




  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {


      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
			'http://update.freifunk-bochum.de/stable/sysupgrade',
			'http://bo.freifunk.ruhr/stable/sysupgrade',
			'http://1.updates.services.ffbo/stable/sysupgrade',
	},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
		'6f6104f1e069dd4390fd7b88eb12b27241ba0eb1f87d36c4b9f7724d81d67f72', -- Chris
		'4bcf080d3937310ea3f5ee3678bff5c839679b69c8b2529ba1371b710dd046b6', -- Philip
		'1e0f7dc99bc916e746545b97fd43e23b3bf80228321c1f58a38a31ad0a679887', -- Andre				
        },
      },

      beta = {
        name = 'beta',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
                        'http://update.freifunk-bochum.de/beta/sysupgrade',
                        'http://bo.freifunk.ruhr/beta/sysupgrade',
                        'http://1.updates.services.ffbo/beta/sysupgrade',
        },


        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
                '6f6104f1e069dd4390fd7b88eb12b27241ba0eb1f87d36c4b9f7724d81d67f72', -- Chris
                '4bcf080d3937310ea3f5ee3678bff5c839679b69c8b2529ba1371b710dd046b6', -- Philip
		'1e0f7dc99bc916e746545b97fd43e23b3bf80228321c1f58a38a31ad0a679887', -- Andre
        },
      },

      experimental = {
        name = 'experimental',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
                        'http://update.freifunk-bochum.de/experimental/sysupgrade',
                        'http://bo.freifunk.ruhr/experimental/sysupgrade',
                        'http://1.updates.services.ffbo/experimental/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
                '6f6104f1e069dd4390fd7b88eb12b27241ba0eb1f87d36c4b9f7724d81d67f72', -- Chris
                '4bcf080d3937310ea3f5ee3678bff5c839679b69c8b2529ba1371b710dd046b6', -- Philip
		'1e0f7dc99bc916e746545b97fd43e23b3bf80228321c1f58a38a31ad0a679887', -- Andre
        },
      },


    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Bandwidth limiting
  simple_tc = {
    mesh_vpn = {
      ifname = 'mesh-vpn',

      -- You may enable it by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      limit_egress = 200,

      -- Default download limit (kbit/s).
      limit_ingress = 3000,
    },
  },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },
}
